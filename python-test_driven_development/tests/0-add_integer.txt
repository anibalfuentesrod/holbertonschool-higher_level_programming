===========================
How to Use 0-add_integer.py
===========================

This module defines an integer addition function ``add_integer(a, b=98)``.

Usage
=====

``add_integer(...)``` returns the addition of its two arguments. For numbers,
that value is equivalent to using the ``+`` operator.

::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2, 3)
    5

::

    >>> add_integer(10.5, 2.5)
    12

::

    >>> add_integer(100)
    198

::

    >>> add_integer(50.1, 50)
    100

::

    >>> add_integer(-10, 10)
    0

Non-Numbers
===========

``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised:

::

    >>> add_integer("100", 100)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(100, "abc")
    Traceback (most recent call last):
    TypeError: b must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer
